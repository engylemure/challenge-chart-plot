{"version":3,"sources":["ui/components/stateless/bottom_app_bar/BottomAppBar.tsx","ui/components/stateless/header_app_bar/HeaderAppBar.tsx","ui/components/stateful/data_editor/DataEditor.tsx","core/util.ts","core/event_processing.ts","ui/components/stateful/chart_section/ChartSection.tsx","ui/screens/app/App.tsx","core/hooks.ts","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","appBar","top","bottom","grow","flexGrow","button","margin","spacing","input","display","BottomAppBar","onGenerateChartButtonPress","classes","AppBar","position","color","className","Toolbar","Button","variant","onClick","root","icon","marginLeft","marginRight","title","HeaderAppBar","Typography","align","DataEditor","height","handleEditorChange","onChange","language","_randomU16Value","Math","round","random","capitalize","s","charAt","toUpperCase","slice","generateLabelFromDataSetInfo","group","selection","groupInfo","map","groupValue","keyName","value","String","Number","Bool","Null","join","split","reduce","acc","measureTime","fun","name","t0","performance","now","result","t1","console","log","processText","events","data","i","eventsData","get_events_data_by_idx","dataSets","dataset_vec","processedDataSets","dataset","green","red","blue","colorA1","colorA0_4","label","fill","pointHoverBorderColor","backgroundColor","borderColor","pointBorderColor","pointHoverBackgroundColor","points","point","x","timestamp","y","push","datasets","events_count","TabPanel","props","children","index","other","component","role","hidden","id","aria-labelledby","Box","p","ChartSection","useState","setValue","useEffect","options","React","useMemo","maintainAspectRatio","responsive","scales","xAxes","type","labelString","ticks","fontSize","fontColor","yAxes","beginAtZero","legend","fullWidth","Tabs","event","newValue","aria-label","Tab","key","style","width","alignItems","flex","createMuiTheme","palette","primary","main","grey","secondary","handleDragBar","resizeHandle","App","text","setText","wasm","setWASM","setData","editorHeight","setEditorHeight","size","setSize","useLayoutEffect","debouncedFunction","debounce","oldSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","initialEditorHeight","setInitialEditorHeight","useCallback","a","Events","from_text","graphHeight","ThemeProvider","Infinity","axis","minConstraints","maxConstraints","onResize","element","handle","resizeHandles","ev","Boolean","location","hostname","match","monaco","init","then","languages","typescript","typescriptDefaults","setDiagnosticsOptions","noSemanticValidation","noSyntaxValidation","catch","error","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1c929c3a.chunk.js","sourcesContent":["import * as React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  input: {\n    display: 'none',\n  },\n}))\n\nexport interface BottomAppBarProps {\n  onGenerateChartButtonPress?: React.MouseEventHandler\n}\n\nexport default function BottomAppBar({\n  onGenerateChartButtonPress,\n}: BottomAppBarProps) {\n  const classes = useStyles()\n\n  return (\n    <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n      <Toolbar>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.button}\n          onClick={onGenerateChartButtonPress}\n        >\n          Generate Chart\n        </Button>\n      </Toolbar>\n    </AppBar>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport MultilineChart from '@material-ui/icons/MultilineChartRounded'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  icon: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}))\n\ninterface HeaderAppBarProps {\n  title: String\n}\n\nexport default function HeaderAppBar({ title }: HeaderAppBarProps) {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <MultilineChart className={classes.icon} />\n          <Typography align=\"left\" variant=\"h6\" className={classes.title}>\n            {title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n","import React from 'react'\nimport {\n  ControlledEditor,\n  ControlledEditorOnChange,\n} from '@monaco-editor/react'\nimport './DataEditor.css'\n\ninterface DataEditorProps {\n  height?: string | number | undefined\n  handleEditorChange?: ControlledEditorOnChange | undefined\n}\n\nconst DataEditor = ({\n  height = '50vh',\n  handleEditorChange,\n}: DataEditorProps) => {\n  return (\n    <ControlledEditor\n      theme=\"dark\"\n      height={height}\n      onChange={handleEditorChange}\n      language=\"typescript\"\n    />\n  )\n}\n\nexport default DataEditor\n","export interface ColorProps {\n  green: number\n  red: number\n  blue: number\n}\n\nfunction _randomU16Value(): number {\n  return Math.round(Math.random() * 255)\n}\n\nexport function randomColor(): ColorProps {\n  return {\n    green: _randomU16Value(),\n    red: _randomU16Value(),\n    blue: _randomU16Value(),\n  }\n}\nexport function capitalize(s: string): string {\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nexport function getValueFromGroup(groupValue: any): string {\n  if (groupValue.String) {\n    return groupValue.String\n  } else if (groupValue.Number) {\n    return groupValue.Number\n  } else if (groupValue.Bool) {\n    return groupValue.Bool\n  } else if (groupValue.Null) {\n    return \"Null\"\n  } else {\n    return \"\"\n  }\n}\n\nexport function generateLabelFromDataSetInfo(\n  group: any[],\n  selection: string\n): string {\n  let groupInfo = group.map(([keyName, value]) => {\n    return `${capitalize(keyName)}: ${capitalize(getValueFromGroup(value))}`\n  }).join(\", \")\n  return `${groupInfo ? groupInfo + ', ': ''}${selection\n    .split('_')\n    .reduce(\n      (acc: string, value: string) =>\n        acc ? `${acc} ${capitalize(value)}` : capitalize(value),\n      ''\n    )}`\n}\n","import { Events } from 'event_processing/event_processing'\nimport { generateLabelFromDataSetInfo, randomColor } from './util'\n// @ts-ignore\nimport * as chartjs from 'chart.js'\nimport { ChartData } from 'react-chartjs-2'\n\nexport interface Point {\n  timestamp: number\n  value: number\n}\n\nexport interface DataSet {\n  group: string[]\n  selection: string\n  points: Point[]\n}\n\nfunction measureTime(fun: any, name: string = \"fun\") {\n  const t0 = performance.now();\n  const result = fun();\n  const t1 = performance.now();\n  console.log(`Call to ${name} took ` + (t1 - t0) + ` milliseconds.`);\n  return result\n}\nexport function processText(\n  events: Events | undefined\n): ChartData<chartjs.ChartData>[] {\n  if (events) {\n    let data: ChartData<chartjs.ChartData>[] = []\n    for (let i = 0; i < events.events_count(); i++) {\n      let eventsData = events.get_events_data_by_idx(i)\n      if (eventsData) {\n        const dataSets: DataSet[] = measureTime(() => {\n          if (eventsData) {\n            return eventsData.dataset_vec();\n          } else return []\n        }, \"dataset_vec\")\n        const processedDataSets = measureTime(() => dataSets.map(dataset => {\n          let color = randomColor()\n          let colorA1 = `rgba(${color.red}, ${color.green}, ${color.blue}, 1)`\n          let colorA0_4 = `rgba(${color.red}, ${color.green}, ${color.blue}, 0.4)`\n          return {\n            label: generateLabelFromDataSetInfo(\n              dataset.group,\n              dataset.selection\n            ),\n            fill: false,\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            backgroundColor: colorA0_4,\n            borderColor: colorA1,\n            pointBorderColor: colorA1,\n            pointHoverBackgroundColor: colorA1,\n            data: dataset.points.map(point => ({\n              x: point.timestamp - dataset.points[0].timestamp,\n              y: point.value,\n            })),\n          }\n        }),)\n        data.push({ datasets: processedDataSets })\n      }\n    }\n    return data\n  }\n  return [{ datasets: [] }]\n}\n","import { ChartData, Line } from 'react-chartjs-2'\n// @ts-ignore\nimport * as chartjs from 'chart.js'\nimport React, { CSSProperties, useEffect, useState } from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\n\ninterface ChartSectionProps {\n  data: ChartData<chartjs.ChartData>[]\n  style: CSSProperties\n}\n\nfunction TabPanel(props: any) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`wrapped-tabpanel-${index}`}\n      aria-labelledby={`wrapped-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  )\n}\n\nconst ChartSection = (props: ChartSectionProps) => {\n  const [value, setValue] = useState(0)\n  const handleChange = (event: any, newValue: any) => {\n    setValue(newValue)\n  }\n  useEffect(() => {\n    setValue(0)\n  }, [props.data])\n  const options = React.useMemo(\n    () => ({\n      maintainAspectRatio: false,\n      responsive: true,\n      scales: {\n        xAxes: [\n          {\n            type: 'linear',\n            display: true,\n            labelString: 'Milliseconds',\n            ticks: {\n              fontSize: '10',\n              fontColor: '#969da5',\n            },\n          },\n        ],\n        yAxes: [\n          {\n            display: true,\n            type: 'linear',\n            labelString: 'Response Time',\n            ticks: {\n              beginAtZero: true,\n            },\n          },\n        ],\n      },\n    }),\n    []\n  )\n  const legend = React.useMemo(\n    () => ({\n      display: true,\n      position: 'right',\n      fullWidth: true,\n    }),\n    []\n  )\n  return (\n    <div>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        aria-label=\"wrapped label tabs example\"\n      >\n        {props.data.map((data, index) => {\n          return <Tab value={index} label={`Chart ${index}`} key={index} />\n        })}\n      </Tabs>\n      {props.data.map((data, index) => {\n        return (\n          <TabPanel value={value} index={index} key={index}>\n            <div\n              style={{\n                height: '100%',\n                width: '100%',\n                alignItems: 'center',\n                flex: 1,\n                display: 'flex',\n                // justifyContent: 'center'\n              }}\n            >\n              <div\n                style={{\n                  position: 'relative',\n                  ...props.style,\n                }}\n              >\n                <Line data={data} options={options} legend={legend} />\n              </div>\n            </div>\n          </TabPanel>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ChartSection\n","import React, { ReactElement, useCallback, useEffect, useState } from 'react'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { createMuiTheme } from '@material-ui/core'\nimport { grey, blue } from '@material-ui/core/colors'\nimport DragHandleRounded from '@material-ui/icons/DragHandleRounded'\nimport BottomAppBar from '../../components/stateless/bottom_app_bar/BottomAppBar'\nimport HeaderAppBar from '../../components/stateless/header_app_bar/HeaderAppBar'\nimport DataEditor from '../../components/stateful/data_editor/DataEditor'\n// @ts-ignore\nimport { ResizableBox } from 'react-resizable'\nimport { useWindowSize } from '../../../core/hooks'\nimport './App.css'\nimport 'react-resizable/css/styles.css'\nimport { processText } from '../../../core/event_processing'\nimport ChartSection from '../../components/stateful/chart_section/ChartSection'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: grey[300],\n    },\n    secondary: {\n      main: blue[500],\n    },\n  },\n})\n\nfunction handleDragBar(resizeHandle: string): ReactElement<any> {\n  return (\n    <div className={`draggable-icon`}>\n      <DragHandleRounded color={'primary'} />\n    </div>\n  )\n}\n\nfunction App() {\n  const [text, setText] = useState('')\n  const [wasm, setWASM] = useState()\n  const [data, setData] = useState([{ datasets: [] }])\n  const [editorHeight, setEditorHeight] = useState(0)\n  const [width, height] = useWindowSize()\n  const [initialEditorHeight, setInitialEditorHeight] = useState(0)\n\n  const handleEditorChange = (ev: any, value: string | undefined) => {\n    if (value) {\n      setText(value)\n    }\n  }\n\n  const onGenerateChartButtonPress = useCallback(async () => {\n    if (text && wasm) {\n      const events = wasm.Events.from_text(text)\n      if (events) {\n        setData(processText(events))\n      }\n    }\n  }, [text, wasm])\n  useEffect(() => {\n    if (initialEditorHeight === 0) {\n      setInitialEditorHeight(height / 2)\n      setEditorHeight(height / 2 - 64)\n    }\n  }, [height, initialEditorHeight])\n  useEffect(() => {\n    ;(async () => {\n      setWASM(await import('event_processing/event_processing'))\n    })()\n  }, [])\n\n  const onResize = (event: any, { element, size, handle }: any) => {\n    setEditorHeight(size.height)\n  }\n\n  const graphHeight = height - editorHeight - 128\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <HeaderAppBar title=\"Jordao's Challenge\" />\n        <div style={{ height: height - 128 }}>\n          <ResizableBox\n            height={initialEditorHeight - 64}\n            width={Infinity}\n            axis=\"y\"\n            minConstraints={[0, (height - 128) * 0.25]}\n            maxConstraints={[Infinity, (height - 128) * 0.75]}\n            onResize={onResize}\n            resizeHandles={['s']}\n            handle={handleDragBar}\n          >\n            <DataEditor\n              height={editorHeight}\n              handleEditorChange={handleEditorChange}\n            />\n          </ResizableBox>\n          <div style={{ height: graphHeight, width }}>\n            <ChartSection\n              data={data}\n              style={{\n                height: `${graphHeight * 0.9 - 64}px`,\n                width: `${width}px`,\n              }}\n            />\n          </div>\n        </div>\n        <BottomAppBar onGenerateChartButtonPress={onGenerateChartButtonPress} />\n      </ThemeProvider>\n    </div>\n  )\n}\n\nexport default App\n","import { useLayoutEffect, useState } from 'react'\nimport debounce from 'lodash/debounce'\n\nexport function useWindowSize() {\n  const [size, setSize] = useState([0, 0])\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize(oldSize => {\n        return [window.innerWidth, window.innerHeight]\n      })\n    }\n    const debouncedFunction = debounce(updateSize, 150)\n    window.addEventListener('resize', debouncedFunction)\n    debouncedFunction()\n    return () => window.removeEventListener('resize', debouncedFunction)\n  }, [])\n  return size\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './ui/screens/app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { monaco } from '@monaco-editor/react';\nmonaco\n  .init()\n  .then(monaco => {\n    monaco.languages.typescript.typescriptDefaults.setDiagnosticsOptions({\n      noSemanticValidation: true,\n      noSyntaxValidation: true,\n    });\n  })\n  .catch(error =>\n    console.error('An error occurred during initialization of Monaco: ', error)\n  );\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}